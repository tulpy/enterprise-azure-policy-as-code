{
  "$schema": "https://raw.githubusercontent.com/Azure/enterprise-azure-policy-as-code/main/Schemas/policy-assignment-schema.json",
  "nodeName": "root/Deny-Classic-Resources",
  "assignment": {
    "name": "Deny-Classic-Resources",
    "displayName": "Deny the deployment of classic resources",
    "description": "Denies deployment of classic resource types under the assigned scope."
  },
  "definitionEntry": {
    "displayName": "Deny the deployment of classic resources",
    "policyId": "/providers/Microsoft.Authorization/policyDefinitions/6c112d4e-5bc7-47ae-a041-ea2d9dccd749"
  },
  "definitionVersion": "2.*.*",
  "enforcementMode": "Default",
  "parameters": {
    "listOfResourceTypesNotAllowed": [
      "Microsoft.ClassicCompute/capabilities",
      "Microsoft.ClassicCompute/checkDomainNameAvailability",
      "Microsoft.ClassicCompute/domainNames",
      "Microsoft.ClassicCompute/domainNames/capabilities",
      "Microsoft.ClassicCompute/domainNames/internalLoadBalancers",
      "Microsoft.ClassicCompute/domainNames/serviceCertificates",
      "Microsoft.ClassicCompute/domainNames/slots",
      "Microsoft.ClassicCompute/domainNames/slots/roles",
      "Microsoft.ClassicCompute/domainNames/slots/roles/metricDefinitions",
      "Microsoft.ClassicCompute/domainNames/slots/roles/metrics",
      "Microsoft.ClassicCompute/moveSubscriptionResources",
      "Microsoft.ClassicCompute/operatingSystemFamilies",
      "Microsoft.ClassicCompute/operatingSystems",
      "Microsoft.ClassicCompute/operations",
      "Microsoft.ClassicCompute/operationStatuses",
      "Microsoft.ClassicCompute/quotas",
      "Microsoft.ClassicCompute/resourceTypes",
      "Microsoft.ClassicCompute/validateSubscriptionMoveAvailability",
      "Microsoft.ClassicCompute/virtualMachines",
      "Microsoft.ClassicCompute/virtualMachines/diagnosticSettings",
      "Microsoft.ClassicCompute/virtualMachines/metricDefinitions",
      "Microsoft.ClassicCompute/virtualMachines/metrics",
      "Microsoft.ClassicInfrastructureMigrate/classicInfrastructureResources",
      "Microsoft.ClassicNetwork/capabilities",
      "Microsoft.ClassicNetwork/expressRouteCrossConnections",
      "Microsoft.ClassicNetwork/expressRouteCrossConnections/peerings",
      "Microsoft.ClassicNetwork/gatewaySupportedDevices",
      "Microsoft.ClassicNetwork/networkSecurityGroups",
      "Microsoft.ClassicNetwork/operations",
      "Microsoft.ClassicNetwork/quotas",
      "Microsoft.ClassicNetwork/reservedIps",
      "Microsoft.ClassicNetwork/virtualNetworks",
      "Microsoft.ClassicNetwork/virtualNetworks/remoteVirtualNetworkPeeringProxies",
      "Microsoft.ClassicNetwork/virtualNetworks/virtualNetworkPeerings",
      "Microsoft.ClassicStorage/capabilities",
      "Microsoft.ClassicStorage/checkStorageAccountAvailability",
      "Microsoft.ClassicStorage/disks",
      "Microsoft.ClassicStorage/images",
      "Microsoft.ClassicStorage/operations",
      "Microsoft.ClassicStorage/osImages",
      "Microsoft.ClassicStorage/osPlatformImages",
      "Microsoft.ClassicStorage/publicImages",
      "Microsoft.ClassicStorage/quotas",
      "Microsoft.ClassicStorage/storageAccounts",
      "Microsoft.ClassicStorage/storageAccounts/blobServices",
      "Microsoft.ClassicStorage/storageAccounts/fileServices",
      "Microsoft.ClassicStorage/storageAccounts/metricDefinitions",
      "Microsoft.ClassicStorage/storageAccounts/metrics",
      "Microsoft.ClassicStorage/storageAccounts/queueServices",
      "Microsoft.ClassicStorage/storageAccounts/services",
      "Microsoft.ClassicStorage/storageAccounts/services/diagnosticSettings",
      "Microsoft.ClassicStorage/storageAccounts/services/metricDefinitions",
      "Microsoft.ClassicStorage/storageAccounts/services/metrics",
      "Microsoft.ClassicStorage/storageAccounts/tableServices",
      "Microsoft.ClassicStorage/storageAccounts/vmImages",
      "Microsoft.ClassicStorage/vmImages",
      "Microsoft.ClassicSubscription/operations"
    ],
    "effect": "Deny"
  },
  "nonComplianceMessages": [
    {
      "message": "Classic resources must not be deployed."
    }
  ],
  "scope": {
    "mg-epacdev": [
      "/providers/Microsoft.Management/managementGroups/mg-epacdev"
    ]
  }
}